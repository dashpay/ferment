

REFINED

	[# [ferment_macro :: opaque]] :: ferment_example_nested + Scope(ferment_example_nested::DashSharedCore, Item(Object($Ty(DashSharedCore, [])), Item(DashSharedCore, ferment_example_nested::DashSharedCore))) (Object) (parent: [] :: ferment_example_nested + Scope(ferment_example_nested, Empty) (CrateRoot)):
			BTreeMap < String , String >: Type(Object($Ty(std :: collections :: BTreeMap < String , String >, [Object(Type(Object($Ty(String, [])))), Comma, Object(Type(Object($Ty(String, []))))])))
			DashSharedCore: Item(Object($Ty(ferment_example_nested :: DashSharedCore, [])), Item(DashSharedCore, ferment_example_nested::DashSharedCore))
			Processor: Type(Object($Ty(ferment_example_nested :: Processor, [])))
			Self: Item(Object($Ty(DashSharedCore, [])), Item(DashSharedCore, ferment_example_nested::DashSharedCore))
			String: Type(Object($Ty(String, [])))
			std :: os :: raw :: c_void: Type(Object($Ty(std :: os :: raw :: c_void, [])))
